name: PR pipeline
on:
  pull_request:
    branches:
      - master

jobs:
  python-linter:
    name: Python Lint
    runs-on: ubuntu-latest
    env:
      SOURCE_FOLDER: kyivmural
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.13
      - name: Install pipenv
        run: python -m pip install --upgrade pip wheel pipenv
      - name: Install dependencies
        run: pipenv sync --dev
      - name: Add current working dir to PYTHONPATH
        run: echo "PYTHONPATH=${PYTHONPATH}:src" >> $GITHUB_ENV
      - name: Pylint
        run: pipenv run pylint $SOURCE_FOLDER
      - name: Pycodestyle
        run: pipenv run pycodestyle $SOURCE_FOLDER
      - name: Flake8
        run: pipenv run flake8 $SOURCE_FOLDER
      - name: Isort
        run: pipenv run isort $SOURCE_FOLDER --profile black --check-only
      # - name: Black
      #   run: pipenv run black $SOURCE_FOLDER --check

  yaml-linter:
    name: Lint YAML
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ibiqlik/action-yamllint@v3.0.0
        with:
          file_or_dir: serverless.yml

  provision-pr-stack:
    name: Provision PR stack
    needs:
      - yaml-linter
      - python-linter
    runs-on: ubuntu-latest
    env:
      BRANCH: pr-${{ github.event.number }}
    steps:
      - uses: actions/checkout@v4
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_KYIVMURAL_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_KYIVMURAL_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_KYIVMURAL_REGION }}
      - uses: actions/setup-python@v5
        with:
          python-version: 3.13
      - name: Install pipenv
        run: python -m pip install --upgrade pip wheel pipenv
      - uses: actions/setup-node@v4
        with:
          node-version: 24
      - run: npm ci
      - name: Install Serveless
        run: npm install -g serverless
      - name: Deploy
        run: serverless deploy --stage pr-${{ github.event.number }}
        env:
          KYIVMURAL_API_ENDPOINT: ${{ secrets.KYIVMURAL_API_ENDPOINT }}
          KYIVMURAL_API_ID: ${{ secrets.KYIVMURAL_API_ID }}
          KYIVMURAL_API_STAGE: ${{ secrets.KYIVMURAL_API_STAGE }}
          DEFAULT_LANG_CODE: ${{ secrets.DEFAULT_LANG_CODE }}
          GOOGLE_MAPS_API_KEY: ${{ secrets.GOOGLE_MAPS_API_KEY }}
          GOOGLE_ANALYTICS_ID: bum
